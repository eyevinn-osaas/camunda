/*
 * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under
 * one or more contributor license agreements. See the NOTICE file distributed
 * with this work for additional information regarding copyright ownership.
 * Licensed under the Camunda License 1.0. You may not use this file
 * except in compliance with the Camunda License 1.0.
 */
// TODO recreate C8 IT equivalent of this with #13337
// package io.camunda.optimize.test.engine;
//
// import static io.camunda.optimize.service.util.importing.EngineConstants.ALL_PERMISSION;
// import static io.camunda.optimize.service.util.importing.EngineConstants.ALL_RESOURCES_RESOURCE_ID;
// import static io.camunda.optimize.service.util.importing.EngineConstants.AUTHORIZATION_TYPE_GLOBAL;
// import static io.camunda.optimize.service.util.importing.EngineConstants.AUTHORIZATION_TYPE_GRANT;
// import static io.camunda.optimize.service.util.importing.EngineConstants.AUTHORIZATION_TYPE_REVOKE;
// import static io.camunda.optimize.service.util.importing.EngineConstants.READ_HISTORY_PERMISSION;
//
// import com.google.common.collect.ImmutableList;
// import io.camunda.optimize.rest.engine.dto.EngineUserDto;
// import io.camunda.optimize.rest.engine.dto.UserCredentialsDto;
// import io.camunda.optimize.rest.engine.dto.UserProfileDto;
// import io.camunda.optimize.test.it.extension.EngineIntegrationExtension;
// import java.util.Arrays;
// import java.util.Collections;
// import java.util.List;
// import lombok.AllArgsConstructor;
// import lombok.Builder;
//
// @AllArgsConstructor
// @Builder
// public class AuthorizationClient {
//   public static final String KERMIT_USER = "kermit";
//   public static final String SPIDERMAN_USER = "spiderman";
//   public static final String SPIDERMAN_FIRSTNAME = "Afraid";
//   public static final String SPIDERMAN_LASTNAME = "of Spiders";
//   public static final String SPIDERMAN_FULLNAME = SPIDERMAN_FIRSTNAME + " " + SPIDERMAN_LASTNAME;
//   public static final String GROUP_ID = "kermitGroup";
//
//   private final EngineIntegrationExtension engineExtension;
//
//   public void addKermitUserWithoutAuthorizations() {
//     engineExtension.addUser(KERMIT_USER, KERMIT_USER);
//   }
//
//   public void addKermitUserAndGrantAccessToOptimize() {
//     addUserAndGrantOptimizeAccess(KERMIT_USER);
//   }
//
//   public void addSpidermanUserAndGrantAccessToOptimize() {
//     final UserProfileDto userProfileDto =
//         UserProfileDto.builder()
//             .id(SPIDERMAN_USER)
//             .firstName(SPIDERMAN_FIRSTNAME)
//             .lastName(SPIDERMAN_LASTNAME)
//             .build();
//     final EngineUserDto userDto =
//         new EngineUserDto(userProfileDto, new UserCredentialsDto(userProfileDto.getId()));
//     addUserAndGrantOptimizeAccess(userDto);
//   }
//
//   public void addUserAndGrantOptimizeAccess(final String userId) {
//     engineExtension.addUser(userId, userId);
//     engineExtension.grantUserOptimizeAccess(userId);
//   }
//
//   public void addUserAndGrantOptimizeAccess(EngineUserDto userDto) {
//     engineExtension.addUser(userDto);
//     engineExtension.grantUserOptimizeAccess(userDto.getProfile().getId());
//   }
//
//   public void createGroupAndGrantOptimizeAccess(final String groupId, final String groupName) {
//     engineExtension.createGroup(groupId, groupName);
//     engineExtension.grantGroupOptimizeAccess(groupId);
//   }
//
//   public void createKermitGroupAndAddKermitToThatGroup() {
//     createGroupAndAddUser(GROUP_ID, KERMIT_USER);
//   }
//
//   public void createGroupAndAddUser(final String groupId, final String userId) {
//     engineExtension.createGroup(groupId);
//     engineExtension.addUserToGroup(userId, groupId);
//   }
//
//   public void createGroupAndAddUsers(final String groupId, final String... userIds) {
//     engineExtension.createGroup(groupId);
//     Arrays.asList(userIds).forEach(userId -> engineExtension.addUserToGroup(userId, groupId));
//   }
//
//   public void grantKermitGroupOptimizeAccess() {
//     engineExtension.grantGroupOptimizeAccess(GROUP_ID);
//   }
//
//   public void grantGroupOptimizeAccess(final String groupId) {
//     engineExtension.grantGroupOptimizeAccess(groupId);
//   }
//
//   public void addGlobalAuthorizationForResource(final int resourceType) {
//     AuthorizationDto authorizationDto = new AuthorizationDto();
//     authorizationDto.setResourceType(resourceType);
//     authorizationDto.setPermissions(Collections.singletonList(ALL_PERMISSION));
//     authorizationDto.setResourceId(ALL_RESOURCES_RESOURCE_ID);
//     authorizationDto.setType(AUTHORIZATION_TYPE_GLOBAL);
//     authorizationDto.setUserId(ALL_RESOURCES_RESOURCE_ID);
//     engineExtension.createAuthorization(authorizationDto);
//   }
//
//   public void grantAllResourceAuthorizationsForKermitGroup(final int resourceType) {
//     grantSingleResourceAuthorizationsForGroup(GROUP_ID, ALL_RESOURCES_RESOURCE_ID, resourceType);
//   }
//
//   public void grantSingleResourceAuthorizationForKermitGroup(
//       final String resourceId, final int resourceType) {
//     grantSingleResourceAuthorizationsForGroup(GROUP_ID, resourceId, resourceType);
//   }
//
//   public void revokeAllDefinitionAuthorizationsForKermitGroup(final int resourceType) {
//     revokeSingleResourceAuthorizationsForGroup(GROUP_ID, ALL_RESOURCES_RESOURCE_ID, resourceType);
//   }
//
//   public void revokeSingleResourceAuthorizationsForKermitGroup(
//       final String resourceId, final int resourceType) {
//     revokeSingleResourceAuthorizationsForGroup(GROUP_ID, resourceId, resourceType);
//   }
//
//   public void grantSingleResourceAuthorizationsForGroup(
//       final String groupId, final String resourceId, final int resourceType) {
//     AuthorizationDto authorizationDto = new AuthorizationDto();
//     authorizationDto.setResourceType(resourceType);
//     authorizationDto.setPermissions(Collections.singletonList(ALL_PERMISSION));
//     authorizationDto.setResourceId(resourceId);
//     authorizationDto.setType(AUTHORIZATION_TYPE_GRANT);
//     authorizationDto.setGroupId(groupId);
//     engineExtension.createAuthorization(authorizationDto);
//   }
//
//   public void revokeSingleResourceAuthorizationsForGroup(
//       final String groupId, final String resourceId, final int resourceType) {
//     AuthorizationDto authorizationDto = new AuthorizationDto();
//     authorizationDto.setResourceType(resourceType);
//     authorizationDto.setPermissions(Collections.singletonList(ALL_PERMISSION));
//     authorizationDto.setResourceId(resourceId);
//     authorizationDto.setType(AUTHORIZATION_TYPE_REVOKE);
//     authorizationDto.setGroupId(groupId);
//     engineExtension.createAuthorization(authorizationDto);
//   }
//
//   public void grantAllResourceAuthorizationsForKermit(final int resourceType) {
//     grantSingleResourceAuthorizationsForUser(KERMIT_USER, ALL_RESOURCES_RESOURCE_ID, resourceType);
//   }
//
//   public void grantSingleResourceAuthorizationForKermit(
//       final String resourceId, final int resourceType) {
//     grantSingleResourceAuthorizationsForUser(KERMIT_USER, resourceId, resourceType);
//   }
//
//   public void grantSingleResourceAuthorizationsForUser(
//       final String userId, final String resourceId, final int resourceType) {
//     grantSingleResourceAuthorizationsForUser(
//         userId, Collections.singletonList(ALL_PERMISSION), resourceId, resourceType);
//   }
//
//   public void grantAllDefinitionAuthorizationsForUserWithReadHistoryPermission(
//       final String userId, final int definitionResourceType) {
//     grantSingleResourceAuthorizationsForUser(
//         userId,
//         ImmutableList.of(READ_HISTORY_PERMISSION),
//         ALL_RESOURCES_RESOURCE_ID,
//         definitionResourceType);
//   }
//
//   public void grantSingleResourceAuthorizationsForUser(
//       final String userId,
//       final List<String> permissions,
//       final String resourceId,
//       final int resourceType) {
//     AuthorizationDto authorizationDto = new AuthorizationDto();
//     authorizationDto.setResourceType(resourceType);
//     authorizationDto.setPermissions(permissions);
//     authorizationDto.setResourceId(resourceId);
//     authorizationDto.setType(AUTHORIZATION_TYPE_GRANT);
//     authorizationDto.setUserId(userId);
//     engineExtension.createAuthorization(authorizationDto);
//   }
//
//   public void revokeAllResourceAuthorizationsForKermit(final int resourceType) {
//     revokeAllResourceAuthorizationsForUser(KERMIT_USER, resourceType);
//   }
//
//   public void revokeSingleResourceAuthorizationsForKermit(
//       final String resourceId, final int resourceType) {
//     revokeSingleResourceAuthorizationsForUser(KERMIT_USER, resourceId, resourceType);
//   }
//
//   public void revokeAllResourceAuthorizationsForUser(final String userId, final int resourceType) {
//     revokeSingleResourceAuthorizationsForUser(userId, ALL_RESOURCES_RESOURCE_ID, resourceType);
//   }
//
//   public void revokeSingleResourceAuthorizationsForUser(
//       final String userId, final String definitionKey, final int resourceType) {
//     AuthorizationDto authorizationDto = new AuthorizationDto();
//     authorizationDto.setResourceType(resourceType);
//     authorizationDto.setPermissions(Collections.singletonList(ALL_PERMISSION));
//     authorizationDto.setResourceId(definitionKey);
//     authorizationDto.setType(AUTHORIZATION_TYPE_REVOKE);
//     authorizationDto.setUserId(userId);
//     engineExtension.createAuthorization(authorizationDto);
//   }
// }
